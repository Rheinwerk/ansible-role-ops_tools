# vim: ft=ansible et ts=2
---
# tasks file for ops_tools

- name: Copy Ops Tools
  copy: src="{{ item }}" dest="/{{ item }}" owner=root group=root mode=0755
  with_items:
    - "usr/local/bin/usereport.py"

## Ubuntu

- block:
    - name: Add Repository Key by URL
      apt_key: url="{{ item.key_url }}" id="{{ item.key_id|default(omit) }}" state=present
      when: item.key_url is defined
      with_items: "{{ _ops_tools.apt_repos|default([]) }}"
      register: new_keys_by_url

    - name: Add Repository Key by ID
      apt_key: id="{{ item.key_id }}" keyserver="{{ item.key_server | default('keyserver.ubuntu.com')  }}" state=present
      when: item.key_id is defined
      with_items: "{{ _ops_tools.apt_repos|default([]) }}"
      register: new_keys_by_id

    - name: Add Repositories URL
      apt_repository: repo="{{ item.repo_line }}" state=present update_cache=no
      when: item.repo_line is defined
      with_items: "{{ _ops_tools.apt_repos|default([]) }}"
      register: new_repos

    - name: Add Repositories PPA
      apt_repository: repo="{{ item.ppa }}" state=present update_cache=no
      when: item.ppa is defined
      with_items: "{{ _ops_tools.apt_repos|default([]) }}"
      register: new_ppas

    - name: Update APT Cache
      apt: update_cache=yes
      when: new_keys_by_url is changed or new_keys_by_id is changed or new_repos is changed or new_ppas is changed

    - name: Install Ops Tools
      apt:
        state: present
        name: "{{ _ops_tools.tools }}"
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'


## ipkg

- block:
    - name: Check if ipkg is installed
      command: /opt/bin/ipkg --version
      register: ipkg
      check_mode: false
      failed_when: ipkg is failed

    - name: Install Ops Tools
      command: /opt/bin/ipkg install {{ item }}
      with_items: "{{ _ops_tools.tools }}"
      when: ipkg is success
  when: ansible_cmdline.syno_hw_version is defined
